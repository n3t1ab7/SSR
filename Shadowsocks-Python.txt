#!/bin/bash
# echo -e "\n* * * * * /bin/bash $file/runssr.sh monitor" >> "$file/crontab.bak"

#-----------------------------------------------------------------------------------------------
#       /etc/init.d/shadowsocks-python start | stop | restart | status
#		/bin/python /usr/bin/ssserver -c /etc/shadowsocks-python/config.json -d start

check_pid_shadowsocks_python(){
	PID=`ps -ef |grep -v grep | grep ssserver |awk '{print $2}'`
}
 
crontab_monitor_ssr(){
	check_pid_shadowsocks_python
	if [[ -z ${PID} ]]; then
		ps -ef |grep -v grep | grep ssserver |awk '{print $2}'
		echo -e "${Error} [$(date "+%Y-%m-%d %H:%M:%S %u %Z")] 检测到 shadowsocks-python服务端 未运行 , 开始启动..." | tee -a ssserver.log
		/etc/init.d/shadowsocks-python  restart
		sleep 1s
		check_pid_shadowsocks_python
		if [[ -z ${PID} ]]; then
			echo -e "${Error} [$(date "+%Y-%m-%d %H:%M:%S %u %Z")] shadowsocks-python服务端 启动失败..." | tee -a ssserver.log  
		else
			echo -e "${Info} [$(date "+%Y-%m-%d %H:%M:%S %u %Z")] shadowsocks-python服务端 启动成功..." | tee -a ssserver.log  
		fi
	else
		echo -e "${Info} [$(date "+%Y-%m-%d %H:%M:%S %u %Z")] shadowsocks-python服务端 进程运行正常..." 
	fi
}

#-----------------------------------------------------------------------------------------------




cd `dirname $0`
python_ver=$(ls /usr/bin|grep -e "^python[23]\.[1-9]\+$"|tail -1)

ulimit -n 512000

crontab_monitor_ssr &&  crontab_monitor_shadowsocks_go  &&  crontab_monitor_shadowsocks_libev &&  crontab_monitor_shadowsocks_ssserver



 
